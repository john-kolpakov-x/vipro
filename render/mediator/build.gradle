dependencies {
  testCompile group: 'org.easytesting', name: 'fest-assert', version: '1.4'
  compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

}

compileJava.options.compilerArgs.addAll(['-h', "${buildDir}/c_headers"])

task copyCHeaders(type: Copy) {
  dependsOn compileJava
  group "build"
  from("${buildDir}/c_headers") {
    include '*.h'
  }
  //noinspection GroovyAssignabilityCheck
  into project(':render:core').projectDir
}

task compileTriFrag(type: JavaExec) {
//  group "build"
  ext.inFileName = "${project.projectDir}/shaders/tri.frag"
  ext.spvDirName = "${project.buildDir}/tmp_generated"
  //noinspection GroovyAssignabilityCheck
  ext.hppDirName = project(':render:core').projectDir.getAbsolutePath() + "/shaders"

  main = 'kz.pompei.vipro.core.mediator.CompileShader'
  args = ["inFileName", inFileName, "spvDirName", spvDirName, "hppDirName", hppDirName]

  classpath sourceSets.test.runtimeClasspath
}

task compileTriVert(type: JavaExec) {
//  group "build"
  ext.inFileName = "${project.projectDir}/shaders/tri.vert"
  ext.spvDirName = "${project.buildDir}/tmp_generated"
  //noinspection GroovyAssignabilityCheck
  ext.hppDirName = project(':render:core').projectDir.getAbsolutePath() + "/shaders"

  main = 'kz.pompei.vipro.core.mediator.CompileShader'
  args = ["inFileName", inFileName, "spvDirName", spvDirName, "hppDirName", hppDirName]

  classpath sourceSets.test.runtimeClasspath
}

task compileAllShaders {
  group "build"
  dependsOn compileTriFrag
  dependsOn compileTriVert
}
